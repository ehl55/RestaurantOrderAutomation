/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csv_parser;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Eug
 */
public class CategorizerJFrame extends javax.swing.JFrame {
    
    NewCategoryJFrame newCategoryJFrame;
    Set<String> missingCategory;

    /**
     * Creates new form CategorizerJFrame
     */
    public CategorizerJFrame() {
        initComponents();
        readCategoriesCsv();
        
        newCategoryJFrame = new NewCategoryJFrame(this);
    }
    
    public void injectMissingCategory(Set<String> missingCategory) {
        this.missingCategory = missingCategory;
    }
    
    public void updateMissingCategoriesTextArea() {
        //reset first
        missingCategoriesTextArea.setText(null);
        
        //not the first LOC b/c could've deleted last missingCategory item
        //but then if early return, won't delete from missingCategoriesTextArea
        if (missingCategory.size()==0) return;

        //use missingCategory to update text area
        String missingString = "";
        for(String item : missingCategory) missingString += (item + ",\n"); 
                
        missingString = missingString.substring(0, missingString.length()-2);
        missingCategoriesTextArea.setText(missingString);
    }
    
    //read from categories.csv, and update combo box
    public void readCategoriesCsv() {
         try {
            categoryComboBox.removeAllItems();
            categoryComboBox.addItem("<Select Category>");
             
            BufferedReader br = new BufferedReader(new FileReader("categories.csv"));
            String line = br.readLine(); 
            while (line != null) {
                
                if (line.length() != 0) categoryComboBox.addItem(line); //don't add a blank space category.
                
                line = br.readLine();
            }
            
            categoryComboBox.addItem("Other/Ignore");  
         } catch (FileNotFoundException e) {
             JOptionPane.showMessageDialog(null, "categories.csv doesn't exist.", "Error", JOptionPane.INFORMATION_MESSAGE);
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        categoryComboBox = new javax.swing.JComboBox<>();
        applyButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        doneButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        missingCategoriesTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        categorizeTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        addCatButton = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        categoryComboBox.setToolTipText("");

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("The following items are missing categories. Please categorize below.");

        jLabel2.setText("Separate values with commas (copy and paste from above).");

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        missingCategoriesTextArea.setColumns(20);
        missingCategoriesTextArea.setRows(5);
        jScrollPane2.setViewportView(missingCategoriesTextArea);

        categorizeTextArea.setColumns(20);
        categorizeTextArea.setRows(5);
        jScrollPane3.setViewportView(categorizeTextArea);

        jLabel3.setText("Category:");

        addCatButton.setText("New Category");
        addCatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCatButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(applyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(doneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addCatButton)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(addCatButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doneButton)
                    .addComponent(applyButton))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        
        int selectedInd = categoryComboBox.getSelectedIndex();
        if (selectedInd == 0) {
            JOptionPane.showMessageDialog(null, "Please select a category", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        String category = categoryComboBox.getItemAt(selectedInd);
        String[] items = categorizeTextArea.getText().split(",");
        
        try { 
            FileWriter pw = new FileWriter("categorizer.csv",true);
            
            //categorizing each item
            for(String item : items) {
                
                item = item.trim();
                
                System.out.println(item);
                System.out.println(missingCategory.contains(item));
                                
                if(missingCategory.contains(item) && item.length() > 0) {
                    //add to categorizer.csv
                    pw.append(item + "," + category + "\n");
                    
                    //remove from missingCategory set
                    missingCategory.remove(item);
                }
            }
            
            //refresh
            updateMissingCategoriesTextArea();
            
            pw.flush();
            pw.close();
            
            if (categorizeTextArea.getText().length()==0) {
                JOptionPane.showMessageDialog(null, "Nothing to categorize, try again.", "Error", JOptionPane.INFORMATION_MESSAGE);
            } else {
                categorizeTextArea.setText(null);
                JOptionPane.showMessageDialog(null, "Sucessfully categorized items.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "categorizer.csv doesn't exist.", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_applyButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        setVisible(false);
        JOptionPane.showMessageDialog(null, "Please try conversion again.", "Notification", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_doneButtonActionPerformed

    private void addCatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCatButtonActionPerformed
        newCategoryJFrame.setVisible(true);
    }//GEN-LAST:event_addCatButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCatButton;
    private javax.swing.JButton applyButton;
    private javax.swing.JTextArea categorizeTextArea;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JButton doneButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea missingCategoriesTextArea;
    // End of variables declaration//GEN-END:variables
}
